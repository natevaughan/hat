/*
 * This file is generated by jOOQ.
 */
package com.natevaughan.kchat.domain.jooq.tables;


import com.natevaughan.kchat.domain.jooq.Indexes;
import com.natevaughan.kchat.domain.jooq.Kchat;
import com.natevaughan.kchat.domain.jooq.Keys;
import com.natevaughan.kchat.domain.jooq.tables.records.InviteRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Invite extends TableImpl<InviteRecord> {

    private static final long serialVersionUID = 914521014;

    /**
     * The reference instance of <code>kchat.invite</code>
     */
    public static final Invite INVITE = new Invite();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InviteRecord> getRecordType() {
        return InviteRecord.class;
    }

    /**
     * The column <code>kchat.invite.token</code>.
     */
    public final TableField<InviteRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>kchat.invite.date_created</code>.
     */
    public final TableField<InviteRecord, Timestamp> DATE_CREATED = createField("date_created", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>kchat.invite.space_id</code>.
     */
    public final TableField<InviteRecord, byte[]> SPACE_ID = createField("space_id", org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "");

    /**
     * The column <code>kchat.invite.space_id_text</code>.
     */
    public final TableField<InviteRecord, String> SPACE_ID_TEXT = createField("space_id_text", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>kchat.invite.creator_id</code>.
     */
    public final TableField<InviteRecord, byte[]> CREATOR_ID = createField("creator_id", org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "");

    /**
     * The column <code>kchat.invite.creator_id_text</code>.
     */
    public final TableField<InviteRecord, String> CREATOR_ID_TEXT = createField("creator_id_text", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>kchat.invite.memo</code>.
     */
    public final TableField<InviteRecord, String> MEMO = createField("memo", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>kchat.invite.expires</code>.
     */
    public final TableField<InviteRecord, Timestamp> EXPIRES = createField("expires", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>kchat.invite.recipient_id</code>.
     */
    public final TableField<InviteRecord, byte[]> RECIPIENT_ID = createField("recipient_id", org.jooq.impl.SQLDataType.BINARY(16), this, "");

    /**
     * The column <code>kchat.invite.recipient_id_text</code>.
     */
    public final TableField<InviteRecord, String> RECIPIENT_ID_TEXT = createField("recipient_id_text", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>kchat.invite.date_redeemed</code>.
     */
    public final TableField<InviteRecord, Timestamp> DATE_REDEEMED = createField("date_redeemed", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>kchat.invite</code> table reference
     */
    public Invite() {
        this(DSL.name("invite"), null);
    }

    /**
     * Create an aliased <code>kchat.invite</code> table reference
     */
    public Invite(String alias) {
        this(DSL.name(alias), INVITE);
    }

    /**
     * Create an aliased <code>kchat.invite</code> table reference
     */
    public Invite(Name alias) {
        this(alias, INVITE);
    }

    private Invite(Name alias, Table<InviteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Invite(Name alias, Table<InviteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Invite(Table<O> child, ForeignKey<O, InviteRecord> key) {
        super(child, key, INVITE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kchat.KCHAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INVITE_FK_5ZZ2SYBCC7BFFEC, Indexes.INVITE_FK_ZYVUJ3M6SJV0BTP, Indexes.INVITE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InviteRecord> getPrimaryKey() {
        return Keys.KEY_INVITE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InviteRecord>> getKeys() {
        return Arrays.<UniqueKey<InviteRecord>>asList(Keys.KEY_INVITE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InviteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InviteRecord, ?>>asList(Keys.FK_ZYVUJ3M6SJV0BTP, Keys.FK_5ZZ2SYBCC7BFFEC);
    }

    public Space space() {
        return new Space(this, Keys.FK_ZYVUJ3M6SJV0BTP);
    }

    public User user() {
        return new User(this, Keys.FK_5ZZ2SYBCC7BFFEC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Invite as(String alias) {
        return new Invite(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Invite as(Name alias) {
        return new Invite(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Invite rename(String name) {
        return new Invite(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Invite rename(Name name) {
        return new Invite(name, null);
    }
}
