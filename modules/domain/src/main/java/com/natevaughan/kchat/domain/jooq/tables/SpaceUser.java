/*
 * This file is generated by jOOQ.
 */
package com.natevaughan.kchat.domain.jooq.tables;


import com.natevaughan.kchat.domain.jooq.Indexes;
import com.natevaughan.kchat.domain.jooq.Kchat;
import com.natevaughan.kchat.domain.jooq.Keys;
import com.natevaughan.kchat.domain.jooq.tables.records.SpaceUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpaceUser extends TableImpl<SpaceUserRecord> {

    private static final long serialVersionUID = 615259034;

    /**
     * The reference instance of <code>kchat.space_user</code>
     */
    public static final SpaceUser SPACE_USER = new SpaceUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpaceUserRecord> getRecordType() {
        return SpaceUserRecord.class;
    }

    /**
     * The column <code>kchat.space_user.space_id</code>.
     */
    public final TableField<SpaceUserRecord, byte[]> SPACE_ID = createField("space_id", org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "");

    /**
     * The column <code>kchat.space_user.space_id_text</code>.
     */
    public final TableField<SpaceUserRecord, String> SPACE_ID_TEXT = createField("space_id_text", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>kchat.space_user.user_id</code>.
     */
    public final TableField<SpaceUserRecord, byte[]> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "");

    /**
     * The column <code>kchat.space_user.user_id_text</code>.
     */
    public final TableField<SpaceUserRecord, String> USER_ID_TEXT = createField("user_id_text", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>kchat.space_user.user_alias</code>.
     */
    public final TableField<SpaceUserRecord, String> USER_ALIAS = createField("user_alias", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>kchat.space_user.contextual_privilege</code>.
     */
    public final TableField<SpaceUserRecord, Integer> CONTEXTUAL_PRIVILEGE = createField("contextual_privilege", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("10", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>kchat.space_user</code> table reference
     */
    public SpaceUser() {
        this(DSL.name("space_user"), null);
    }

    /**
     * Create an aliased <code>kchat.space_user</code> table reference
     */
    public SpaceUser(String alias) {
        this(DSL.name(alias), SPACE_USER);
    }

    /**
     * Create an aliased <code>kchat.space_user</code> table reference
     */
    public SpaceUser(Name alias) {
        this(alias, SPACE_USER);
    }

    private SpaceUser(Name alias, Table<SpaceUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private SpaceUser(Name alias, Table<SpaceUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SpaceUser(Table<O> child, ForeignKey<O, SpaceUserRecord> key) {
        super(child, key, SPACE_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kchat.KCHAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SPACE_USER_FK_VGRTIOEOCKHTBKU, Indexes.SPACE_USER_PRIMARY, Indexes.SPACE_USER_UK_BSDOTH5WCKBCFZJ, Indexes.SPACE_USER_UK_YRF8C6FOMC9YLGZ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SpaceUserRecord> getPrimaryKey() {
        return Keys.KEY_SPACE_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SpaceUserRecord>> getKeys() {
        return Arrays.<UniqueKey<SpaceUserRecord>>asList(Keys.KEY_SPACE_USER_PRIMARY, Keys.KEY_SPACE_USER_UK_BSDOTH5WCKBCFZJ, Keys.KEY_SPACE_USER_UK_YRF8C6FOMC9YLGZ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SpaceUserRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SpaceUserRecord, ?>>asList(Keys.FK_VGRTIOEOCKHTBKU, Keys.FK_DHRTLCOWYFUWQB6);
    }

    public Space space() {
        return new Space(this, Keys.FK_VGRTIOEOCKHTBKU);
    }

    public User user() {
        return new User(this, Keys.FK_DHRTLCOWYFUWQB6);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpaceUser as(String alias) {
        return new SpaceUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpaceUser as(Name alias) {
        return new SpaceUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SpaceUser rename(String name) {
        return new SpaceUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SpaceUser rename(Name name) {
        return new SpaceUser(name, null);
    }
}
